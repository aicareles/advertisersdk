com.heaton.advertisersdk.AdvertiserClient
com.heaton.advertisersdk.AdvertiserClient: com.heaton.advertisersdk.AdvertiserClient getDefault()
com.heaton.advertisersdk.AdvertiserClient: com.heaton.advertisersdk.AdvertiserClient create(android.content.Context)
com.heaton.advertisersdk.AdvertiserClient: com.heaton.advertisersdk.AdvertiserConfig config()
com.heaton.advertisersdk.AdvertiserClient: void search(com.heaton.advertisersdk.callback.AdvertiserDiscoverCallback)
com.heaton.advertisersdk.AdvertiserClient: void connect(com.heaton.advertisersdk.AdvertiserDevice,com.heaton.advertisersdk.callback.AdvertiserConnectCallback)
com.heaton.advertisersdk.AdvertiserClient: void startAdvertising(byte[])
com.heaton.advertisersdk.AdvertiserClient: void startAdvertising(byte[],int)
com.heaton.advertisersdk.AdvertiserClient: void stopAdvertising()
com.heaton.advertisersdk.AdvertiserClient: void stopAdvertising(java.lang.Long)
com.heaton.advertisersdk.AdvertiserClient: void startScan(com.heaton.advertisersdk.callback.AdvertiserScanCallback)
com.heaton.advertisersdk.AdvertiserClient: void startScan()
com.heaton.advertisersdk.AdvertiserClient: void stopScan()
com.heaton.advertisersdk.AdvertiserClient: boolean isScanning()
com.heaton.advertisersdk.AdvertiserClient: android.content.Context getContext()
com.heaton.advertisersdk.AdvertiserClient: boolean isBleEnable()
com.heaton.advertisersdk.AdvertiserClient: boolean isSupportAdvertiser()
com.heaton.advertisersdk.AdvertiserClient: void turnOnBlueTooth(android.app.Activity)
com.heaton.advertisersdk.AdvertiserClient: boolean turnOffBlueTooth()
com.heaton.advertisersdk.AdvertiserConfig
com.heaton.advertisersdk.AdvertiserConfig: java.lang.String RANDOM_VALUE
com.heaton.advertisersdk.AdvertiserConfig: java.lang.String DEFALUT_PREFIX_NAME
com.heaton.advertisersdk.AdvertiserConfig: byte[] DEFALUT_AVERTISE_PRODUCT
com.heaton.advertisersdk.AdvertiserConfig: com.heaton.advertisersdk.AdvertiserConfig sConfig
com.heaton.advertisersdk.AdvertiserConfig: com.heaton.advertisersdk.interceptor.Interceptor interceptor
com.heaton.advertisersdk.AdvertiserConfig: com.heaton.advertisersdk.interceptor.ParseStrategy parseStrategy
com.heaton.advertisersdk.AdvertiserConfig: java.lang.String logTAG
com.heaton.advertisersdk.AdvertiserConfig: boolean logAvertiseExceptions
com.heaton.advertisersdk.AdvertiserConfig: boolean throAvertiseException
com.heaton.advertisersdk.AdvertiserConfig: long connectTimeout
com.heaton.advertisersdk.AdvertiserConfig: long scanPeriod
com.heaton.advertisersdk.AdvertiserConfig: int retryConnect
com.heaton.advertisersdk.AdvertiserConfig: java.lang.String prefixAvertiseName
com.heaton.advertisersdk.AdvertiserConfig: byte[] avertiseProductCode
com.heaton.advertisersdk.AdvertiserConfig: java.lang.String addressPrefix
com.heaton.advertisersdk.AdvertiserConfig: AdvertiserConfig()
com.heaton.advertisersdk.AdvertiserConfig: com.heaton.advertisersdk.AdvertiserConfig config()
com.heaton.advertisersdk.AdvertiserConfig: byte[] generateRandom()
com.heaton.advertisersdk.AdvertiserConfig: void <clinit>()
com.heaton.advertisersdk.AdvertiserConfig: java.lang.String getLogTAG()
com.heaton.advertisersdk.AdvertiserConfig: com.heaton.advertisersdk.AdvertiserConfig setLogTAG(java.lang.String)
com.heaton.advertisersdk.AdvertiserConfig: boolean isLogAvertiseExceptions()
com.heaton.advertisersdk.AdvertiserConfig: com.heaton.advertisersdk.AdvertiserConfig setLogAvertiseExceptions(boolean)
com.heaton.advertisersdk.AdvertiserConfig: boolean isThroAvertiseException()
com.heaton.advertisersdk.AdvertiserConfig: com.heaton.advertisersdk.AdvertiserConfig setThroAvertiseException(boolean)
com.heaton.advertisersdk.AdvertiserConfig: long getConnectTimeout()
com.heaton.advertisersdk.AdvertiserConfig: com.heaton.advertisersdk.AdvertiserConfig setConnectTimeout(long)
com.heaton.advertisersdk.AdvertiserConfig: long getScanPeriod()
com.heaton.advertisersdk.AdvertiserConfig: com.heaton.advertisersdk.AdvertiserConfig setScanPeriod(long)
com.heaton.advertisersdk.AdvertiserConfig: int getRetryConnect()
com.heaton.advertisersdk.AdvertiserConfig: com.heaton.advertisersdk.AdvertiserConfig setRetryConnect(int)
com.heaton.advertisersdk.AdvertiserConfig: java.lang.String getPrefixAvertiseName()
com.heaton.advertisersdk.AdvertiserConfig: com.heaton.advertisersdk.AdvertiserConfig setPrefixAvertiseName(java.lang.String)
com.heaton.advertisersdk.AdvertiserConfig: byte[] getAvertiseProductCode()
com.heaton.advertisersdk.AdvertiserConfig: com.heaton.advertisersdk.AdvertiserConfig setAvertiseProductCode(byte[])
com.heaton.advertisersdk.AdvertiserConfig: java.lang.String getAddressPrefix()
com.heaton.advertisersdk.AdvertiserConfig: com.heaton.advertisersdk.AdvertiserConfig setAddressPrefix(java.lang.String)
com.heaton.advertisersdk.AdvertiserConfig: com.heaton.advertisersdk.interceptor.Interceptor getInterceptor()
com.heaton.advertisersdk.AdvertiserConfig: com.heaton.advertisersdk.AdvertiserConfig setInterceptor(com.heaton.advertisersdk.interceptor.Interceptor)
com.heaton.advertisersdk.AdvertiserConfig: com.heaton.advertisersdk.interceptor.ParseStrategy getParseStrategy()
com.heaton.advertisersdk.AdvertiserConfig: com.heaton.advertisersdk.AdvertiserConfig setParseStrategy(com.heaton.advertisersdk.interceptor.ParseStrategy)
com.heaton.advertisersdk.AdvertiserConfig: com.heaton.advertisersdk.AdvertiserClient create(android.content.Context)
com.heaton.advertisersdk.AdvertiserDevice
com.heaton.advertisersdk.AdvertiserDevice: java.lang.String TAG
com.heaton.advertisersdk.AdvertiserDevice: android.os.Parcelable$Creator CREATOR
com.heaton.advertisersdk.AdvertiserDevice: int pairState
com.heaton.advertisersdk.AdvertiserDevice: java.lang.String bleAddress
com.heaton.advertisersdk.AdvertiserDevice: java.lang.String bleName
com.heaton.advertisersdk.AdvertiserDevice: java.lang.String bleAlias
com.heaton.advertisersdk.AdvertiserDevice: boolean isOn
com.heaton.advertisersdk.AdvertiserDevice: byte[] rollingCode
com.heaton.advertisersdk.AdvertiserDevice: byte[] randomCode
com.heaton.advertisersdk.AdvertiserDevice: AdvertiserDevice()
com.heaton.advertisersdk.AdvertiserDevice: AdvertiserDevice(android.bluetooth.BluetoothDevice)
com.heaton.advertisersdk.AdvertiserDevice: AdvertiserDevice(android.os.Parcel)
com.heaton.advertisersdk.AdvertiserDevice: void <clinit>()
com.heaton.advertisersdk.AdvertiserDevice: boolean isPaired()
com.heaton.advertisersdk.AdvertiserDevice: boolean isPairing()
com.heaton.advertisersdk.AdvertiserDevice: int getPairState()
com.heaton.advertisersdk.AdvertiserDevice: void setPairState(int)
com.heaton.advertisersdk.AdvertiserDevice: java.lang.String getBleAddress()
com.heaton.advertisersdk.AdvertiserDevice: void setBleAddress(java.lang.String)
com.heaton.advertisersdk.AdvertiserDevice: java.lang.String getBleName()
com.heaton.advertisersdk.AdvertiserDevice: void setBleName(java.lang.String)
com.heaton.advertisersdk.AdvertiserDevice: java.lang.String getBleAlias()
com.heaton.advertisersdk.AdvertiserDevice: void setBleAlias(java.lang.String)
com.heaton.advertisersdk.AdvertiserDevice: byte[] getRollingCode()
com.heaton.advertisersdk.AdvertiserDevice: void setRollingCode(byte[])
com.heaton.advertisersdk.AdvertiserDevice: byte[] getRandomCode()
com.heaton.advertisersdk.AdvertiserDevice: void setRandomCode(byte[])
com.heaton.advertisersdk.AdvertiserDevice: byte[] getProductCode()
com.heaton.advertisersdk.AdvertiserDevice: boolean isOn()
com.heaton.advertisersdk.AdvertiserDevice: void setOn(boolean)
com.heaton.advertisersdk.AdvertiserDevice: java.lang.String toString()
com.heaton.advertisersdk.AdvertiserDevice: int describeContents()
com.heaton.advertisersdk.AdvertiserDevice: void writeToParcel(android.os.Parcel,int)
com.heaton.advertisersdk.callback.AdvertiserConnectCallback
com.heaton.advertisersdk.callback.AdvertiserConnectCallback: void onAvertiseConnected(com.heaton.advertisersdk.AdvertiserDevice)
com.heaton.advertisersdk.callback.AdvertiserConnectCallback: void onAvertiseConnectTimeOut()
com.heaton.advertisersdk.callback.AdvertiserDiscoverCallback
com.heaton.advertisersdk.callback.AdvertiserDiscoverCallback: AdvertiserDiscoverCallback()
com.heaton.advertisersdk.callback.AdvertiserDiscoverCallback: void onDiscoverStart()
com.heaton.advertisersdk.callback.AdvertiserDiscoverCallback: void onAvertiseScan(com.heaton.advertisersdk.AdvertiserDevice)
com.heaton.advertisersdk.callback.AdvertiserDiscoverCallback: void onDiscoverStop()
com.heaton.advertisersdk.callback.AdvertiserScanCallback
com.heaton.advertisersdk.callback.AdvertiserScanCallback: AdvertiserScanCallback()
com.heaton.advertisersdk.callback.AdvertiserScanCallback: void onStart()
com.heaton.advertisersdk.callback.AdvertiserScanCallback: void onStop()
com.heaton.advertisersdk.callback.AdvertiserScanCallback: void onLeScan(java.lang.Object,int,byte[])
com.heaton.advertisersdk.callback.AdvertiserScanCallback: void onParsedData(java.lang.Object,byte[])
com.heaton.advertisersdk.callback.AdvertiserScanCallback: void onScanFailed(int)
com.heaton.advertisersdk.interceptor.Interceptor
com.heaton.advertisersdk.interceptor.Interceptor: void request(com.heaton.advertisersdk.interceptor.Payload)
com.heaton.advertisersdk.interceptor.Interceptor: void response(com.heaton.advertisersdk.interceptor.Payload)
com.heaton.advertisersdk.interceptor.Interceptor$InterceptorHandler
com.heaton.advertisersdk.interceptor.Interceptor$InterceptorHandler: com.heaton.advertisersdk.interceptor.Payload request(byte[])
com.heaton.advertisersdk.interceptor.Interceptor$InterceptorHandler: com.heaton.advertisersdk.interceptor.Payload response(byte[])
com.heaton.advertisersdk.interceptor.ParseStrategy
com.heaton.advertisersdk.interceptor.ParseStrategy: com.heaton.advertisersdk.interceptor.Strategy resStrategy()
com.heaton.advertisersdk.interceptor.ParseStrategy: com.heaton.advertisersdk.interceptor.Strategy reqStrategy()
com.heaton.advertisersdk.interceptor.Payload
com.heaton.advertisersdk.interceptor.Payload: byte[] scanResult
com.heaton.advertisersdk.interceptor.Payload: byte[] productCode
com.heaton.advertisersdk.interceptor.Payload: byte[] rollingCode
com.heaton.advertisersdk.interceptor.Payload: byte[] randomCode
com.heaton.advertisersdk.interceptor.Payload: byte commandCode
com.heaton.advertisersdk.interceptor.Payload: Payload()
com.heaton.advertisersdk.interceptor.Payload: java.lang.String byte2Str(byte[])
com.heaton.advertisersdk.interceptor.Payload: byte[] getScanResult()
com.heaton.advertisersdk.interceptor.Payload: void setScanResult(byte[])
com.heaton.advertisersdk.interceptor.Payload: byte[] getProductCode()
com.heaton.advertisersdk.interceptor.Payload: void setProductCode(byte[])
com.heaton.advertisersdk.interceptor.Payload: byte[] getRollingCode()
com.heaton.advertisersdk.interceptor.Payload: void setRollingCode(byte[])
com.heaton.advertisersdk.interceptor.Payload: byte[] getRandomCode()
com.heaton.advertisersdk.interceptor.Payload: void setRandomCode(byte[])
com.heaton.advertisersdk.interceptor.Payload: byte getCommandCode()
com.heaton.advertisersdk.interceptor.Payload: void setCommandCode(byte)
com.heaton.advertisersdk.interceptor.Payload: void parse(byte[],com.heaton.advertisersdk.interceptor.Strategy)
com.heaton.advertisersdk.interceptor.Payload: java.lang.String toString()
com.heaton.advertisersdk.interceptor.RealInterceptorHandler
com.heaton.advertisersdk.interceptor.RealInterceptorHandler: java.lang.ThreadLocal sInterceptorHandler
com.heaton.advertisersdk.interceptor.RealInterceptorHandler: com.heaton.advertisersdk.interceptor.Interceptor interceptor
com.heaton.advertisersdk.interceptor.RealInterceptorHandler: com.heaton.advertisersdk.interceptor.ParseStrategy strategy
com.heaton.advertisersdk.interceptor.RealInterceptorHandler: com.heaton.advertisersdk.interceptor.Payload payload
com.heaton.advertisersdk.interceptor.RealInterceptorHandler: RealInterceptorHandler()
com.heaton.advertisersdk.interceptor.RealInterceptorHandler: com.heaton.advertisersdk.interceptor.RealInterceptorHandler getInstance()
com.heaton.advertisersdk.interceptor.RealInterceptorHandler: void <clinit>()
com.heaton.advertisersdk.interceptor.RealInterceptorHandler: com.heaton.advertisersdk.interceptor.Payload request(byte[])
com.heaton.advertisersdk.interceptor.RealInterceptorHandler: com.heaton.advertisersdk.interceptor.Payload response(byte[])
com.heaton.advertisersdk.interceptor.Strategy
com.heaton.advertisersdk.interceptor.Strategy: int productIndex
com.heaton.advertisersdk.interceptor.Strategy: int rollingIndex
com.heaton.advertisersdk.interceptor.Strategy: int randomIndex
com.heaton.advertisersdk.interceptor.Strategy: int commandIndex
com.heaton.advertisersdk.interceptor.Strategy: Strategy(com.heaton.advertisersdk.interceptor.Strategy$Builder)
com.heaton.advertisersdk.interceptor.Strategy: int access$400(com.heaton.advertisersdk.interceptor.Strategy)
com.heaton.advertisersdk.interceptor.Strategy: int access$500(com.heaton.advertisersdk.interceptor.Strategy)
com.heaton.advertisersdk.interceptor.Strategy: int access$600(com.heaton.advertisersdk.interceptor.Strategy)
com.heaton.advertisersdk.interceptor.Strategy: int access$700(com.heaton.advertisersdk.interceptor.Strategy)
com.heaton.advertisersdk.interceptor.Strategy: int getProductIndex()
com.heaton.advertisersdk.interceptor.Strategy: void setProductIndex(int)
com.heaton.advertisersdk.interceptor.Strategy: int getRollingIndex()
com.heaton.advertisersdk.interceptor.Strategy: void setRollingIndex(int)
com.heaton.advertisersdk.interceptor.Strategy: int getRandomIndex()
com.heaton.advertisersdk.interceptor.Strategy: void setRandomIndex(int)
com.heaton.advertisersdk.interceptor.Strategy: int getCommandIndex()
com.heaton.advertisersdk.interceptor.Strategy: void setCommandIndex(int)
com.heaton.advertisersdk.interceptor.Strategy$Builder
com.heaton.advertisersdk.interceptor.Strategy$Builder: int productIndex
com.heaton.advertisersdk.interceptor.Strategy$Builder: int rollingIndex
com.heaton.advertisersdk.interceptor.Strategy$Builder: int randomIndex
com.heaton.advertisersdk.interceptor.Strategy$Builder: int commandIndex
com.heaton.advertisersdk.interceptor.Strategy$Builder: Strategy$Builder()
com.heaton.advertisersdk.interceptor.Strategy$Builder: Strategy$Builder(com.heaton.advertisersdk.interceptor.Strategy)
com.heaton.advertisersdk.interceptor.Strategy$Builder: int access$000(com.heaton.advertisersdk.interceptor.Strategy$Builder)
com.heaton.advertisersdk.interceptor.Strategy$Builder: int access$100(com.heaton.advertisersdk.interceptor.Strategy$Builder)
com.heaton.advertisersdk.interceptor.Strategy$Builder: int access$200(com.heaton.advertisersdk.interceptor.Strategy$Builder)
com.heaton.advertisersdk.interceptor.Strategy$Builder: int access$300(com.heaton.advertisersdk.interceptor.Strategy$Builder)
com.heaton.advertisersdk.interceptor.Strategy$Builder: com.heaton.advertisersdk.interceptor.Strategy$Builder productIndex(int)
com.heaton.advertisersdk.interceptor.Strategy$Builder: com.heaton.advertisersdk.interceptor.Strategy$Builder rollingIndex(int)
com.heaton.advertisersdk.interceptor.Strategy$Builder: com.heaton.advertisersdk.interceptor.Strategy$Builder randomIndex(int)
com.heaton.advertisersdk.interceptor.Strategy$Builder: com.heaton.advertisersdk.interceptor.Strategy$Builder commandIndex(int)
com.heaton.advertisersdk.interceptor.Strategy$Builder: com.heaton.advertisersdk.interceptor.Strategy build()
com.heaton.advertisersdk.proxy.RequestProxy
com.heaton.advertisersdk.proxy.RequestProxy: java.lang.String TAG
com.heaton.advertisersdk.proxy.RequestProxy: com.heaton.advertisersdk.proxy.RequestProxy instance
com.heaton.advertisersdk.proxy.RequestProxy: java.lang.Object receiver
com.heaton.advertisersdk.proxy.RequestProxy: RequestProxy()
com.heaton.advertisersdk.proxy.RequestProxy: com.heaton.advertisersdk.proxy.RequestProxy getRequestProxy()
com.heaton.advertisersdk.proxy.RequestProxy: void <clinit>()
com.heaton.advertisersdk.proxy.RequestProxy: java.lang.Object bindProxy(android.content.Context,java.lang.Object)
com.heaton.advertisersdk.proxy.RequestProxy: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
com.heaton.advertisersdk.request.AdvertiserRequest
com.heaton.advertisersdk.request.AdvertiserRequest: java.lang.String TAG
com.heaton.advertisersdk.request.AdvertiserRequest: int DEFAULT_CHANNEL
com.heaton.advertisersdk.request.AdvertiserRequest: android.os.Handler handler
com.heaton.advertisersdk.request.AdvertiserRequest: android.bluetooth.BluetoothAdapter bluetoothAdapter
com.heaton.advertisersdk.request.AdvertiserRequest: android.bluetooth.le.BluetoothLeAdvertiser advertiser
com.heaton.advertisersdk.request.AdvertiserRequest: android.bluetooth.le.AdvertiseSettings advertiseSettings
com.heaton.advertisersdk.request.AdvertiserRequest: android.bluetooth.le.AdvertiseData advertiseData
com.heaton.advertisersdk.request.AdvertiserRequest: byte[] calculatedPayload
com.heaton.advertisersdk.request.AdvertiserRequest: byte[] pairload
com.heaton.advertisersdk.request.AdvertiserRequest: java.lang.Runnable stopAvertiseRunnable
com.heaton.advertisersdk.request.AdvertiserRequest: android.bluetooth.le.AdvertiseCallback mAdvertiseCallback
com.heaton.advertisersdk.request.AdvertiserRequest: AdvertiserRequest()
com.heaton.advertisersdk.request.AdvertiserRequest: void resetDiscover(com.heaton.advertisersdk.AdvertiserDevice)
com.heaton.advertisersdk.request.AdvertiserRequest: android.bluetooth.le.AdvertiseCallback access$000(com.heaton.advertisersdk.request.AdvertiserRequest)
com.heaton.advertisersdk.request.AdvertiserRequest: android.bluetooth.le.BluetoothLeAdvertiser access$100(com.heaton.advertisersdk.request.AdvertiserRequest)
com.heaton.advertisersdk.request.AdvertiserRequest: byte[] access$200(com.heaton.advertisersdk.request.AdvertiserRequest)
com.heaton.advertisersdk.request.AdvertiserRequest: android.bluetooth.le.AdvertiseData access$302(com.heaton.advertisersdk.request.AdvertiserRequest,android.bluetooth.le.AdvertiseData)
com.heaton.advertisersdk.request.AdvertiserRequest: android.bluetooth.le.AdvertiseSettings access$400(com.heaton.advertisersdk.request.AdvertiserRequest)
com.heaton.advertisersdk.request.AdvertiserRequest: android.bluetooth.le.AdvertiseData access$300(com.heaton.advertisersdk.request.AdvertiserRequest)
com.heaton.advertisersdk.request.AdvertiserRequest: void startAdvertising(byte[],int)
com.heaton.advertisersdk.request.AdvertiserRequest: void startAdvertising(byte[])
com.heaton.advertisersdk.request.AdvertiserRequest: void stopAdvertising()
com.heaton.advertisersdk.request.AdvertiserRequest: void stopAdvertising(java.lang.Long)
com.heaton.advertisersdk.request.AdvertiserRequest: void discoverDevice(com.heaton.advertisersdk.callback.AdvertiserDiscoverCallback)
com.heaton.advertisersdk.request.AdvertiserRequest: void connectDevice(com.heaton.advertisersdk.AdvertiserDevice,com.heaton.advertisersdk.callback.AdvertiserConnectCallback)
com.heaton.advertisersdk.request.AdvertiserRequest: void retryConnect()
com.heaton.advertisersdk.request.AdvertiserRequest$1
com.heaton.advertisersdk.request.AdvertiserRequest$1: byte[] val$payload
com.heaton.advertisersdk.request.AdvertiserRequest$1: int val$bleChannel
com.heaton.advertisersdk.request.AdvertiserRequest$1: com.heaton.advertisersdk.request.AdvertiserRequest this$0
com.heaton.advertisersdk.request.AdvertiserRequest$1: AdvertiserRequest$1(com.heaton.advertisersdk.request.AdvertiserRequest,byte[],int)
com.heaton.advertisersdk.request.AdvertiserRequest$1: void run()
com.heaton.advertisersdk.request.AdvertiserRequest$2
com.heaton.advertisersdk.request.AdvertiserRequest$2: com.heaton.advertisersdk.request.AdvertiserRequest this$0
com.heaton.advertisersdk.request.AdvertiserRequest$2: AdvertiserRequest$2(com.heaton.advertisersdk.request.AdvertiserRequest)
com.heaton.advertisersdk.request.AdvertiserRequest$2: void run()
com.heaton.advertisersdk.request.AdvertiserRequest$3
com.heaton.advertisersdk.request.AdvertiserRequest$3: com.heaton.advertisersdk.request.AdvertiserRequest this$0
com.heaton.advertisersdk.request.AdvertiserRequest$3: AdvertiserRequest$3(com.heaton.advertisersdk.request.AdvertiserRequest)
com.heaton.advertisersdk.request.AdvertiserRequest$3: void run()
com.heaton.advertisersdk.request.AdvertiserRequest$4
com.heaton.advertisersdk.request.AdvertiserRequest$4: com.heaton.advertisersdk.request.AdvertiserRequest this$0
com.heaton.advertisersdk.request.AdvertiserRequest$4: AdvertiserRequest$4(com.heaton.advertisersdk.request.AdvertiserRequest)
com.heaton.advertisersdk.request.AdvertiserRequest$4: void onStartSuccess(android.bluetooth.le.AdvertiseSettings)
com.heaton.advertisersdk.request.AdvertiserRequest$4: void onStartFailure(int)
com.heaton.advertisersdk.request.Implement
com.heaton.advertisersdk.request.Implement: java.lang.Class value()
com.heaton.advertisersdk.request.ParseRequest
com.heaton.advertisersdk.request.ParseRequest: java.lang.String TAG
com.heaton.advertisersdk.request.ParseRequest: int BLE_GAP_AD_TYPE_FLAGS
com.heaton.advertisersdk.request.ParseRequest: int BLE_GAP_AD_TYPE_16BIT_SERVICE_UUID_COMPLETE
com.heaton.advertisersdk.request.ParseRequest: int BLE_GAP_AD_TYPE_MANUFACTURER_SPECIFIC_DATA
com.heaton.advertisersdk.request.ParseRequest: long SINGLE_CONNECT_TIME
com.heaton.advertisersdk.request.ParseRequest: com.heaton.advertisersdk.callback.AdvertiserDiscoverCallback advertiserDiscoverCallback
com.heaton.advertisersdk.request.ParseRequest: com.heaton.advertisersdk.callback.AdvertiserConnectCallback advertiserConnectCallback
com.heaton.advertisersdk.request.ParseRequest: android.util.SparseArray records
com.heaton.advertisersdk.request.ParseRequest: java.util.List devicePool
com.heaton.advertisersdk.request.ParseRequest: byte[] avertiseProductCode
com.heaton.advertisersdk.request.ParseRequest: byte[] randomCode
com.heaton.advertisersdk.request.ParseRequest: int retryCount
com.heaton.advertisersdk.request.ParseRequest: android.os.Handler handler
com.heaton.advertisersdk.request.ParseRequest: java.lang.Runnable discoverStopRunnable
com.heaton.advertisersdk.request.ParseRequest: java.lang.Runnable retryRunnable
com.heaton.advertisersdk.request.ParseRequest: ParseRequest()
com.heaton.advertisersdk.request.ParseRequest: boolean isOwnProduct(byte[])
com.heaton.advertisersdk.request.ParseRequest: void setDeviceValue(com.heaton.advertisersdk.AdvertiserDevice,byte[])
com.heaton.advertisersdk.request.ParseRequest: com.heaton.advertisersdk.AdvertiserDevice takeDevicePool(com.heaton.advertisersdk.AdvertiserDevice)
com.heaton.advertisersdk.request.ParseRequest: com.heaton.advertisersdk.callback.AdvertiserDiscoverCallback access$000(com.heaton.advertisersdk.request.ParseRequest)
com.heaton.advertisersdk.request.ParseRequest: int access$100(com.heaton.advertisersdk.request.ParseRequest)
com.heaton.advertisersdk.request.ParseRequest: int access$108(com.heaton.advertisersdk.request.ParseRequest)
com.heaton.advertisersdk.request.ParseRequest: android.os.Handler access$200(com.heaton.advertisersdk.request.ParseRequest)
com.heaton.advertisersdk.request.ParseRequest: java.lang.Runnable access$300(com.heaton.advertisersdk.request.ParseRequest)
com.heaton.advertisersdk.request.ParseRequest: com.heaton.advertisersdk.callback.AdvertiserConnectCallback access$400(com.heaton.advertisersdk.request.ParseRequest)
com.heaton.advertisersdk.request.ParseRequest: void setAvertiseDiscoverCallback(com.heaton.advertisersdk.callback.AdvertiserDiscoverCallback)
com.heaton.advertisersdk.request.ParseRequest: void setAvertiseConnectCallback(com.heaton.advertisersdk.callback.AdvertiserConnectCallback)
com.heaton.advertisersdk.request.ParseRequest: void parseScanRecord(com.heaton.advertisersdk.AdvertiserDevice,byte[],com.heaton.advertisersdk.callback.AdvertiserScanCallback)
com.heaton.advertisersdk.request.ParseRequest$1
com.heaton.advertisersdk.request.ParseRequest$1: com.heaton.advertisersdk.request.ParseRequest this$0
com.heaton.advertisersdk.request.ParseRequest$1: ParseRequest$1(com.heaton.advertisersdk.request.ParseRequest)
com.heaton.advertisersdk.request.ParseRequest$1: void run()
com.heaton.advertisersdk.request.ParseRequest$2
com.heaton.advertisersdk.request.ParseRequest$2: com.heaton.advertisersdk.request.ParseRequest this$0
com.heaton.advertisersdk.request.ParseRequest$2: ParseRequest$2(com.heaton.advertisersdk.request.ParseRequest)
com.heaton.advertisersdk.request.ParseRequest$2: void run()
com.heaton.advertisersdk.request.Rproxy
com.heaton.advertisersdk.request.Rproxy: com.heaton.advertisersdk.request.Rproxy s_instance
com.heaton.advertisersdk.request.Rproxy: java.util.Map mRequestObjs
com.heaton.advertisersdk.request.Rproxy: com.heaton.advertisersdk.request.Rproxy getProxy()
com.heaton.advertisersdk.request.Rproxy: Rproxy()
com.heaton.advertisersdk.request.Rproxy: java.util.List getRequestsClass(android.content.Context,java.lang.String)
com.heaton.advertisersdk.request.Rproxy: void <clinit>()
com.heaton.advertisersdk.request.Rproxy: void init(android.content.Context)
com.heaton.advertisersdk.request.Rproxy: java.lang.Object getRequest(java.lang.Class)
com.heaton.advertisersdk.request.ScanRequest
com.heaton.advertisersdk.request.ScanRequest: java.lang.String TAG
com.heaton.advertisersdk.request.ScanRequest: boolean scanning
com.heaton.advertisersdk.request.ScanRequest: android.bluetooth.BluetoothAdapter bluetoothAdapter
com.heaton.advertisersdk.request.ScanRequest: android.bluetooth.le.BluetoothLeScanner scanner
com.heaton.advertisersdk.request.ScanRequest: android.bluetooth.le.ScanSettings scanSettings
com.heaton.advertisersdk.request.ScanRequest: java.util.List filters
com.heaton.advertisersdk.request.ScanRequest: com.heaton.advertisersdk.callback.AdvertiserScanCallback scanCallback
com.heaton.advertisersdk.request.ScanRequest: java.util.ArrayList scanDevices
com.heaton.advertisersdk.request.ScanRequest: com.heaton.advertisersdk.request.ParseRequest parseRequest
com.heaton.advertisersdk.request.ScanRequest: android.os.Handler handler
com.heaton.advertisersdk.request.ScanRequest: java.lang.Runnable stopRunnble
com.heaton.advertisersdk.request.ScanRequest: android.bluetooth.le.ScanCallback mScannerCallback
com.heaton.advertisersdk.request.ScanRequest: ScanRequest()
com.heaton.advertisersdk.request.ScanRequest: com.heaton.advertisersdk.AdvertiserDevice getDevice(java.lang.String)
com.heaton.advertisersdk.request.ScanRequest: com.heaton.advertisersdk.AdvertiserDevice access$000(com.heaton.advertisersdk.request.ScanRequest,java.lang.String)
com.heaton.advertisersdk.request.ScanRequest: java.util.ArrayList access$100(com.heaton.advertisersdk.request.ScanRequest)
com.heaton.advertisersdk.request.ScanRequest: com.heaton.advertisersdk.callback.AdvertiserScanCallback access$200(com.heaton.advertisersdk.request.ScanRequest)
com.heaton.advertisersdk.request.ScanRequest: com.heaton.advertisersdk.request.ParseRequest access$300(com.heaton.advertisersdk.request.ScanRequest)
com.heaton.advertisersdk.request.ScanRequest: void startScan(com.heaton.advertisersdk.callback.AdvertiserScanCallback)
com.heaton.advertisersdk.request.ScanRequest: void startScan()
com.heaton.advertisersdk.request.ScanRequest: void stopScan()
com.heaton.advertisersdk.request.ScanRequest: boolean isScanning()
com.heaton.advertisersdk.request.ScanRequest$1
com.heaton.advertisersdk.request.ScanRequest$1: com.heaton.advertisersdk.request.ScanRequest this$0
com.heaton.advertisersdk.request.ScanRequest$1: ScanRequest$1(com.heaton.advertisersdk.request.ScanRequest)
com.heaton.advertisersdk.request.ScanRequest$1: void run()
com.heaton.advertisersdk.request.ScanRequest$2
com.heaton.advertisersdk.request.ScanRequest$2: com.heaton.advertisersdk.request.ScanRequest this$0
com.heaton.advertisersdk.request.ScanRequest$2: ScanRequest$2(com.heaton.advertisersdk.request.ScanRequest)
com.heaton.advertisersdk.request.ScanRequest$2: void onScanResult(int,android.bluetooth.le.ScanResult)
com.heaton.advertisersdk.request.ScanRequest$2: void onBatchScanResults(java.util.List)
com.heaton.advertisersdk.request.ScanRequest$2: void onScanFailed(int)
com.heaton.advertisersdk.utils.ByteUtils
com.heaton.advertisersdk.utils.ByteUtils: ByteUtils()
com.heaton.advertisersdk.utils.ByteUtils: short bytes2Short2(byte[])
com.heaton.advertisersdk.utils.ByteUtils: java.lang.String BinaryToHexString(byte[])
com.heaton.advertisersdk.utils.ByteUtils: byte[] short2Bytes(short)
com.heaton.advertisersdk.utils.ByteUtils: byte[] int2byte(int)
com.heaton.advertisersdk.utils.ByteUtils: int byte2int(byte[])
com.heaton.advertisersdk.utils.ByteUtils: java.lang.String byteArrayToHexStr(byte[])
com.heaton.advertisersdk.utils.ByteUtils: byte[] hexStrToByteArray(java.lang.String)
wireless.algorithm.io.cshsoft.a2_4gcrytonlib.WirelessEncoder
wireless.algorithm.io.cshsoft.a2_4gcrytonlib.WirelessEncoder: void payload(int,byte[],byte[])
wireless.algorithm.io.cshsoft.a2_4gcrytonlib.WirelessEncoder: boolean cipher(byte[],boolean)
